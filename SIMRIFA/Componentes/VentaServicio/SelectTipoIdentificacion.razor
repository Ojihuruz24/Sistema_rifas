@using MudBlazor
@using SIMRIFA.Model.core;
@using SIMRIFA.Tools.ConexionFrontBackend;



<MudSelect Label="@Title"
		   Value="seleccionado"
		   ValueChanged="OnSelectedValues"
		   T="TipoIdentificacion"
		   Variant="Variant.Filled"
		   AdornmentColor="Color.Secondary"
		   Required="@Requerido"
		   RequiredError="@MensajeError">
	@if (listaTipoIdentificacion != null)
	{
		@if (listaTipoIdentificacion.Count() > 0)
		{
			@foreach (var item in listaTipoIdentificacion)
			{
				<MudSelectItem T="TipoIdentificacion" Value="@item">@item.COD_OPERATIVO - @item.DESCRIPCION</MudSelectItem>
			}
		}
	}
</MudSelect>

@code {

	TipoIdentificacion seleccionado = new();

	[Parameter]
	public EventCallback<TipoIdentificacion> TipoIdentificacionEvent { get; set; }

	private IEnumerable<TipoIdentificacion> listaTipoIdentificacion { get; set; } = new List<TipoIdentificacion>();

	[Inject]
	private IConexionApi<TipoIdentificacion, TipoIdentificacion> ApiTipoIdentificacion { get; set; }


	[Parameter]
	public string? Preselecionado { get; set; }

	[Parameter]
	public bool Requerido { get; set; }

	[Parameter]
	public string Title { get; set; } = "";

	[Parameter]
	public string MensajeError { get; set; } = "Campo requerido";


	protected override async Task OnInitializedAsync()
	{
		listaTipoIdentificacion = await ApiTipoIdentificacion.GetAll("TipoIdentificacion");

		seleccionado = listaTipoIdentificacion.FirstOrDefault(x => x.COD_OPERATIVO == Preselecionado);
		await OnSelectedValues(seleccionado);
	}

	//protected override async Task OnAfterRenderAsync(bool firstRender)
	//{
	//	if (firstRender)
	//	{
	//		listaTipoIdentificacion = await ApiTipoIdentificacion.GetAll("TipoIdentificacion");

	//		seleccionado = listaTipoIdentificacion.FirstOrDefault(x => x.COD_OPERATIVO == Preselecionado);
	//		await OnSelectedValues(seleccionado);
	//	}

	//	await base.OnAfterRenderAsync(firstRender);
	//}


	public async Task OnSelectedValues(TipoIdentificacion values)
	{
		if (values != null)
		{
			seleccionado = values;
			await TipoIdentificacionEvent.InvokeAsync(seleccionado);
		}
	}

}
