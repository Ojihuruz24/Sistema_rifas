@using MudBlazor;
@inject IDialogService DialogService;


<html>
<head>
	<style>


		.btn-flotante {
			position: fixed;
			bottom: 50px;
			right: 20px;
			transition: all 300ms ease 0ms;
			box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);
			z-index: 9999;
			border-radius: 50%;
		}

			.btn-flotante:hover {
				box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.3);
				transform: translateY(-7px);
			}

		#mudfab {
			border-radius: 50%;
			height: 80px;
			width: 80px;
		}

		#LoQuiero {
			height: 80px;
			width: 80px;
			display: flex;
			justify-content: center;
			align-items: center;
			position: relative;
		}
	</style>
</head>

<body>
	<div class="btn-flotante" hidden="@HideLabel">
		<a class="pulse">
			<MudButton id="mudfab" Variant="Variant.Text" OnClick="@OpenDialog">
				<img id="LoQuiero" src="/Img/Empresa/BtnComprar.png" alt="Logo">
			</MudButton>
		</a>
	</div>
</body>

</html>

@code {


	private bool HideLabel { get; set; } = false;

	[Parameter]
	public string TipoPagina { get; set; }

	[Parameter]
	public string Pagina { get; set; }


	protected override void OnInitialized()
	{

	}


	private async Task OpenDialog()
	{
		HideLabel = !HideLabel;
		var parameters = new DialogParameters<MudDialogComprarPagina>();
		parameters.Add(x => x.TipoPagina, TipoPagina);
		parameters.Add(x => x.Pagina, Pagina);

		var options = new DialogOptions
			{
				CloseOnEscapeKey = true,
				MaxWidth = MaxWidth.ExtraExtraLarge,
				FullWidth = true
			};
		var dialog = await DialogService.ShowAsync<MudDialogComprarPagina>($"Tipo pagina {Pagina}", parameters, options);

		var result = await dialog.Result;

		if (!result.Canceled)
		{
			
		}

		HideLabel = !HideLabel;
	}



}
