@page "/Empresa/Sorteos/Rifas04"
@using MudBlazor
@using SIMRIFA.Componentes.Rifas.Adiccion
@using SIMRIFA.Componentes.Rifas.Footer;
@using SIMRIFA.Componentes.Rifas.Header;
@using SIMRIFA.Componentes.Rifas.Body;
@using SIMRIFA.Componentes.Rifas.Wompi;
@using SIMRIFA.Data;
@inject IJSRuntime JSRuntime;
@inject IDialogService Dialog;

<html>
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Nombre tu rifa</title>

	<!-- Asegúrate de incluir el CSS de Bootstrap aquí -->

	<style>
		.text-small {
			font-size: 0.9rem !important;
		}

		body {
			background: #FAFAFA;
			width:100%;
		}

		.header {
			background-color: black;
			background-image: linear-gradient(to right, #98B2E8 0%, #00FFFF 100%);
			box-shadow: 0 2px 5px rgba(0,0,0,0.1);
		}

		.navbar {
			border-top: 8px solid #07768f;
			border-bottom: 8px solid #07768f;
		/*	background-color: black;
			background-image: linear-gradient(to right, #98B2E8 0%, #00FFFF 100%);*/
		}


		.section-1 {
			background: #EDEDED;
		}

		.section-2 {
			background: #EDEDED;
			/*	border: dashed;
									border-color: cornflowerblue;*/
		}

		.section-3 {
			background: #EDEDED;
		}

		.section-4 {
			background: #EDEDED;
		}

		.section-5 {
			background: #FAFAFA;
		}

		.section-6 {
			background: #FAFAFA;
		}

		.card-verificador {
			max-width: 400px;
			margin: 20px auto;
			padding: 20px;
			background: #EDEDED;
		}

		.paneles .mud-expand-panel-header {
			background: #98B2E8 !important;
			border-radius: 5px;
		}

		.paneles .mud-expand-panel {
			margin-bottom: 5px;
		}

		.paneles .mud-collapse-wrapper {
			padding-bottom: 15px;
		}

	</style>
</head>

<body>
	<!-- ACA VA LA MARKA DE AGUA DE "PRUEBAS" quitar si se vende-->
	<div class="confidential-watermark" style="position: fixed;top: 50%;left: 50%;transform: translate(-50%, -50%);z-index: 9999;opacity: 0.05;pointer-events: none;">
		<p style="font-size: 3em;color: #383838;background: #fff;border-radius: 11px;padding: 9px;font-weight: bold;transform: rotate(-45deg);white-space: nowrap;">
			SITIO WEB DE PRUEBAS
		</p>
	</div>

	<section class="py-1 header text-center navbar-expand-lg navbar-light bg-light">
		<div class="container py-1 text-white">
			<header class="py-1">
				<h1 class="display-4">Bienvenidos a la rifa</h1>
				<p class="font-italic mb-1">[Informacion de tu rifa]</p>
				<p class="font-italic mb-1">Puede subir imagen, texto o otro tipo de info</p>
				@*<img src="img/SOAT.png" width="150" height="150" />*@
			</header>
		</div>
	</section>

	<!-- Sticky navbar-->
	<header class="header sticky-top">
		@*<nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top">*@
		<nav class="navbar navbar-expand-lg navbar-light bg-light py-3 fixed-top">
			<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="container">
				@*<strong class="h6 mb-0 font-weight-bold text-uppercase">Sticky navbar</strong>*@
				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav ml-auto">
						<li class="nav-item active">
							<a class="nav-link" href="#">
								INICIO
								<span class="sr-only">(current)</span>
							</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#section-5">VERIFICADOR</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="Empresa/Sorteos/Rifas04/#section-6">PREGUNTAS</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">CONTACTO</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#contacto">CONTACTO</a>
						</li>
					</ul>
				</div>
			</div>
		</nav>
	</header>

	<!-- Imagen con la descripcion de la rifa-->
	<section class="py-5 section-1 mx-auto" style="width:80%">

		<MudGrid Justify="Justify.FlexEnd">
			<MudItem xs="12" sm="12" md="6" lg="6" xl="6" xxl="6" Class="d-flex justify-end">
				<img src="Img/Rifa04_imagen.png" class="img-fluid border-4 border-primary rounded img-thumbnail" alt="Aqui va tu imagen promocional">
			</MudItem>
			<MudItem xs="12" sm="12" md="6" lg="6" xl="6" xxl="6" Class="justify-start	">
				<span>
					<h4><b>🗓️	30 DIC 2024  🕓 08:00 PM</b></h4>

					<h2><b>Demo Rifa de Prueba 1000</b></h2>
				</span>
				<span>
					Aquí va su descripción, en este ejemplo son:
				</span>
				<span id="raffleDescription">
					<h4><b>1000 Boletos</b></h4>
					<b>Puedes tener varios premios...</b> <br />
					🥇Primer Premio: Moto 🏍️<br />
					🥈Segundo Lugar: iPhone 📱<br />
					🥉Tercer Premio: Efectivo 💴<br />

					🔹 Descuentos Activados<br />
					🔹 Promoción 3x2 Activada<br />

					🗓️ <b>Fecha:</b> 30 de Diciembre<br />
					🎥 <b>Transmisión en vivo:</b> 🕓 8:00 pm<br />

					<b>¿Cómo funciona? 🍀</b><br />
					🔹 Se eligen los boletos 🎟<br />
					🔹 Se llenan los datos.<br />
					🔹 Se realiza el registro. <br />
				</span>
			</MudItem>
		</MudGrid>
	</section>

	<br />
	<MudStack Justify="Justify.Center" Row="true" Class="container py-5 section-2" style="width:auto%">
		<img height="200" src="Img/listaBoletas.png" class="img-fluid rounded " alt="Aqui va tu imagen promocional">
		<!--	<svg width="150" height="150"
					 fill="currentColor"
					 class="bi bi-ticket-perforated"
					 viewBox="0 0 16 16"
					 style="font-size: 1rem;color: cornflowerblue;transform: rotate(120deg);">
					<path d="M4 4.85v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9z" />
					<path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3zM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9z" />
				</svg>

				<h2><span style="font-size: 5rem; color: cornflowerblue;">LISTA DE BOLETAS</span></h2>
				<svg width="150" height="150"
					 fill="currentColor"
					 class="bi bi-ticket-perforated"
					 viewBox="0 0 16 16"
					 style="font-size: 1rem; color: cornflowerblue;transform: rotate(220deg);">
					<path d="M4 4.85v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9z" />
					<path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3zM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9z" />
								</svg>-->
	</MudStack>
	<br />
	<section class="py-5 section-3 mx-auto" style="width:auto">
		<div class="container py-5 text-center">
			<MudContainer>                           
				<div id="unique_id_scroll_section" class="ma-0" style="height:500px;overflow: auto;">
					<MudPaper>
						<MudStack Row="true" Justify="Justify.SpaceEvenly" Wrap="Wrap.Wrap">
							<MudChipSet @bind-SelectedChips="selected" MultiSelection="true" Filter="false">
								@foreach (var item in diccionario)
								{
									if (item.Value == true)
									{
										<MudChip Variant="Variant.Text" SelectedColor="Color.Success" Disabled>
										<p>@item.Key.ToString("D3")</p>
									</MudChip>
									}
									else
									{
										<MudChip Text="@item.Key.ToString("D3")" Variant="Variant.Text" Color="Color.Default" SelectedColor="Color.Primary">
											<p>@item.Key.ToString("D3")</p>
										</MudChip>
									}
								}
							</MudChipSet>
						</MudStack>
					</MudPaper>
				</div>
			</MudContainer>
			<br />
			<br />
			<div class="d-flex justify-center">

				@if (selected != null && selected.Length > 0)
				{

					<MudChipSet AllClosable="true" OnClose="Closed">
						@foreach (var value in selected)
						{



							<MudChip Color="Color.Success" IconColor="Color.Success" Text="@value.Text"></MudChip>
						}
					</MudChipSet>
				}
				else
				{
					<br />
					<MudText>No ha seleccionado ninguno</MudText>
				}
			</div>
		</div>
	</section>
	<br />
	<section class="py-5 section-4 mx-auto text-center" style="width:100%">
		<div>
			<div>
				<svg width="100" height="100"
					 fill="currentColor"
					 class="bi bi-ticket-perforated"
					 viewBox="0 0 16 16"
					 style="font-size: 1rem;color: cornflowerblue;transform: rotate(120deg);">
					<path d="M4 4.85v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9z" />
					<path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3zM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9z" />
				</svg>
				<MudFab StartIcon="@Icons.Material.Filled.Search" Label="COMPRAR" Color="Color.Success" DisableElevation="true" />
				<svg width="100" height="100"
					 fill="currentColor"
					 class="bi bi-ticket-perforated"
					 viewBox="0 0 16 16"
					 style="font-size: 1rem;color: cornflowerblue;transform: rotate(120deg);">
					<path d="M4 4.85v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9zm-7 1.8v.9h1v-.9zm7 0v.9h1v-.9z" />
					<path d="M1.5 3A1.5 1.5 0 0 0 0 4.5V6a.5.5 0 0 0 .5.5 1.5 1.5 0 1 1 0 3 .5.5 0 0 0-.5.5v1.5A1.5 1.5 0 0 0 1.5 13h13a1.5 1.5 0 0 0 1.5-1.5V10a.5.5 0 0 0-.5-.5 1.5 1.5 0 0 1 0-3A.5.5 0 0 0 16 6V4.5A1.5 1.5 0 0 0 14.5 3zM1 4.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v1.05a2.5 2.5 0 0 0 0 4.9v1.05a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-1.05a2.5 2.5 0 0 0 0-4.9z" />
				</svg>
			</div>
			<div>
			</div>
		</div>

	</section>
	<br />
	<br />

	<!--Section de verificador de numeros-->
	<section id="section-5" class="py-5 section-5 mx-auto" style="width:100%">
		<div class="card card-verificador">
			<div class="card-body text-center">
				<h5 class="card-title text-center">VERIFICADOR DE BOLETOS</h5>
				<MudTextField @bind-Value="BuscarBoleta" Label="Ingresa telefono o correo" HelperText="con el que hizo el pago" Variant="Variant.Filled" />
				<br />
				<MudFab StartIcon="@Icons.Material.Filled.Search" Label="BUSCAR" Color="Color.Success" DisableElevation="true" />
			</div>
		</div>

	</section>

	<br />
	<!--Section de preguntas-->
	<section id="section-6" class="py-5 section-6 mx-auto" style="width:60%">
		<MudExpansionPanels Square=true MultiExpansion="false" DisableBorders="true" Elevation="0" Class="paneles">
			<MudExpansionPanel Text="¿Cuánto cuesta el ticket?" >
				<pre>El costo es de:
				🔹 1 Ticket: $5.000 pesos.
				🔹 2 Tickets: $10.000 pesos.
				🔹 3 Tickets: $15.000 pesos.
				🔹 5 Tickets: $20.000 pesos.
				🔹 10 Tickets: $40.000 pesos.
				🔹 20 Tickets: $80.000 pesos.
				🔹 50 Tickets: $230.000 pesos.
				🔹 100 Tickets: $450.000 pesos.
				</pre>
			</MudExpansionPanel>
			<MudExpansionPanel Text="¿Dinámica del sorteo?">
				Se juega con los 4 últimos dígitos de la Lotería Nacional.
			</MudExpansionPanel>
			<MudExpansionPanel Text="¿Cuantas boletas son?">
				Son 999 oportunidades de ganar!
			</MudExpansionPanel>
		</MudExpansionPanels>
	</section>

</body>
</html>

@code {

	@inject MenuState MenuState
	private bool EstadoButton = false;
	private string urlImageOne = "Img/comboOne.png";
	private string urlImageTwho = "Img/comboTwo.png";
	private string urlImageTrhe = "Img/comboThre.png";
	private string urlImageCupones1 = "Img/Cupon1.png";
	private string urlImageCupones2 = "Img/Cupon2.png";
	private string BuscarBoleta { get; set; }

	private int vendidas { get; set; }
	private int ValorMaximo = 1;
	private decimal Porcentaje { get; set; } = 0;
	private int cantidadVenta { get; set; } = 1;


	protected override void OnInitialized()
	{
		ObtenerNumeros();
		MenuState.SetMenuVisibility(false);
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeSmoothScroll");
        }
    }

	public async void Comprar(int cantidad, int valor)
	{
		await OpenDialog();
		await OpenPagosDialog(cantidad, valor);

	}

	public async void CompraCantidad()
	{
		await OpenDialog();
		vendidas += cantidadVenta;
		var valorWompi = cantidadVenta * 500000;
		var valor = cantidadVenta * 500000;
		await OpenPagosDialog(cantidadVenta, valorWompi);
	}

	private async Task OpenPagosDialog(int boletas, int valor)
	{
		DialogOptions disableBackdropClick = new DialogOptions()
			{
				MaxWidth = MaxWidth.Medium,
				Position = DialogPosition.Center,
				FullWidth = false,
			};


		var parameters = new DialogParameters<PaymentForm>();
		parameters.Add(x => x.Cupones, boletas);
		parameters.Add(x => x.ValorCupones, valor);

		var dialog = await Dialog.ShowAsync<PaymentForm>(string.Empty, parameters, disableBackdropClick);

		var result = await dialog.Result;

		if (!result.Canceled)
		{
			//In a real world scenario we would reload the data from the source here since we "removed" it in the dialog already.
			Guid.TryParse(result.Data.ToString(), out Guid deletedServer);
			// se ltransacion ha sido cancelada
		}
	}

	private async Task OpenDialog()
	{
		if (vendidas >= ValorMaximo)
		{
			DialogOptions disableBackdropClick = new DialogOptions()
				{
					DisableBackdropClick = true,
					MaxWidth = MaxWidth.Medium,
					Position = DialogPosition.Center,
					FullWidth = true
				};

			Dialog.Show<CierreVentas>(string.Empty, disableBackdropClick);
		}
	}

	MudChip[] selected;

	Dictionary<int, bool> diccionario = new Dictionary<int, bool>();

	private Dictionary<int, bool> ObtenerNumeros()
	{

		Random rand = new Random();

		for (int i = 0; i < 1000; i++) // Ajusta esto al tamaño de tu lista
		{
			diccionario.Add(i, rand.Next(2) == 0); // Genera un bool y un entero aleatorios
		}

		return diccionario;
	}

	List<string> NumerosSeleccionados = new List<string>();

	public void Closed(MudChip chipt)
	{
		selected = selected.Where(chip => chip.Text != chipt.Text).ToArray();

	}
}


